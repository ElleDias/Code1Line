// <auto-generated />
using System;
using Code1Line.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Code1Line.Migrations
{
    [DbContext(typeof(Code1Line_Context))]
    partial class Code1Line_ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Code1Line.Domains.Acessos", b =>
                {
                    b.Property<Guid>("IdAcessos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UltimoAcesso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAcessos");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Acessos");
                });

            modelBuilder.Entity("Code1Line.Domains.Atividades", b =>
                {
                    b.Property<Guid>("IdAtividades")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAtividades");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Atividades");
                });

            modelBuilder.Entity("Code1Line.Domains.Departamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("Code1Line.Domains.Equipe", b =>
                {
                    b.Property<Guid>("IdEquipe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEquipe");

                    b.ToTable("Equipe");
                });

            modelBuilder.Entity("Code1Line.Domains.Funcao", b =>
                {
                    b.Property<Guid>("IdFuncao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdFuncao");

                    b.ToTable("Funcao");
                });

            modelBuilder.Entity("Code1Line.Domains.Mensagens", b =>
                {
                    b.Property<Guid>("IdMensagens")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Lida")
                        .HasColumnType("bit");

                    b.HasKey("IdMensagens");

                    b.ToTable("Mensagens");
                });

            modelBuilder.Entity("Code1Line.Domains.Metrica", b =>
                {
                    b.Property<Guid>("IdMetrica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("HorasInprodutivas")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HorasNeutras")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HorasProdutivas")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Periodo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMetrica");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Metrica");
                });

            modelBuilder.Entity("Code1Line.Domains.Monitoramento", b =>
                {
                    b.Property<Guid>("IdMonitoramento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("TempoAtivo")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TempoInativo")
                        .HasColumnType("time");

                    b.HasKey("IdMonitoramento");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Monitoramento");
                });

            modelBuilder.Entity("Code1Line.Domains.Outlier", b =>
                {
                    b.Property<Guid>("IdOutlier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Periodo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdOutlier");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Outlier");
                });

            modelBuilder.Entity("Code1Line.Domains.Usuario", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Code1Line.Domains.UsuarioDepartamento", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdDepartamento")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdDepartamento");

                    b.ToTable("UsuarioDepartamento");
                });

            modelBuilder.Entity("Code1Line.Domains.UsuarioEquipe", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdEquipe")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdEquipe");

                    b.ToTable("UsuarioEquipe");
                });

            modelBuilder.Entity("Code1Line.Domains.UsuarioFuncao", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdFuncao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("dataFim")
                        .HasColumnType("int");

                    b.Property<int>("dataInicio")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdFuncao");

                    b.ToTable("UsuarioFuncao");
                });

            modelBuilder.Entity("Code1Line.Domains.Acessos", b =>
                {
                    b.HasOne("Code1Line.Domains.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Code1Line.Domains.Atividades", b =>
                {
                    b.HasOne("Code1Line.Domains.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Code1Line.Domains.Metrica", b =>
                {
                    b.HasOne("Code1Line.Domains.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Code1Line.Domains.Monitoramento", b =>
                {
                    b.HasOne("Code1Line.Domains.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Code1Line.Domains.Outlier", b =>
                {
                    b.HasOne("Code1Line.Domains.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Code1Line.Domains.UsuarioDepartamento", b =>
                {
                    b.HasOne("Code1Line.Domains.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("IdDepartamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("Code1Line.Domains.UsuarioEquipe", b =>
                {
                    b.HasOne("Code1Line.Domains.Equipe", "Equipe")
                        .WithMany()
                        .HasForeignKey("IdEquipe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipe");
                });

            modelBuilder.Entity("Code1Line.Domains.UsuarioFuncao", b =>
                {
                    b.HasOne("Code1Line.Domains.Funcao", "Funcao")
                        .WithMany()
                        .HasForeignKey("IdFuncao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcao");
                });
#pragma warning restore 612, 618
        }
    }
}
